/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertySchemaSelectSelect } from './PropertySchemaSelectSelect';
import {
    PropertySchemaSelectSelectFromJSON,
    PropertySchemaSelectSelectFromJSONTyped,
    PropertySchemaSelectSelectToJSON,
    PropertySchemaSelectSelectToJSONTyped,
} from './PropertySchemaSelectSelect';

/**
 * 
 * @export
 * @interface PropertySchemaSelect
 */
export interface PropertySchemaSelect {
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaSelect
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaSelect
     */
    name?: string;
    /**
     * 
     * @type {any}
     * @memberof PropertySchemaSelect
     */
    type?: any | null;
    /**
     * 
     * @type {PropertySchemaSelectSelect}
     * @memberof PropertySchemaSelect
     */
    select?: PropertySchemaSelectSelect;
}

/**
 * Check if a given object implements the PropertySchemaSelect interface.
 */
export function instanceOfPropertySchemaSelect(value: object): value is PropertySchemaSelect {
    return true;
}

export function PropertySchemaSelectFromJSON(json: any): PropertySchemaSelect {
    return PropertySchemaSelectFromJSONTyped(json, false);
}

export function PropertySchemaSelectFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySchemaSelect {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'select': json['select'] == null ? undefined : PropertySchemaSelectSelectFromJSON(json['select']),
    };
}

export function PropertySchemaSelectToJSON(json: any): PropertySchemaSelect {
    return PropertySchemaSelectToJSONTyped(json, false);
}

export function PropertySchemaSelectToJSONTyped(value?: PropertySchemaSelect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'select': PropertySchemaSelectSelectToJSON(value['select']),
    };
}

