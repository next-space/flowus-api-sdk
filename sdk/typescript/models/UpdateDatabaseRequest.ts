/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Cover } from './Cover';
import {
    CoverFromJSON,
    CoverFromJSONTyped,
    CoverToJSON,
    CoverToJSONTyped,
} from './Cover';
import type { RichTextItem } from './RichTextItem';
import {
    RichTextItemFromJSON,
    RichTextItemFromJSONTyped,
    RichTextItemToJSON,
    RichTextItemToJSONTyped,
} from './RichTextItem';
import type { UpdateDatabaseRequestPropertiesValue } from './UpdateDatabaseRequestPropertiesValue';
import {
    UpdateDatabaseRequestPropertiesValueFromJSON,
    UpdateDatabaseRequestPropertiesValueFromJSONTyped,
    UpdateDatabaseRequestPropertiesValueToJSON,
    UpdateDatabaseRequestPropertiesValueToJSONTyped,
} from './UpdateDatabaseRequestPropertiesValue';
import type { Icon } from './Icon';
import {
    IconFromJSON,
    IconFromJSONTyped,
    IconToJSON,
    IconToJSONTyped,
} from './Icon';

/**
 * 
 * @export
 * @interface UpdateDatabaseRequest
 */
export interface UpdateDatabaseRequest {
    /**
     * 
     * @type {Array<RichTextItem>}
     * @memberof UpdateDatabaseRequest
     */
    title?: Array<RichTextItem>;
    /**
     * 
     * @type {Icon}
     * @memberof UpdateDatabaseRequest
     */
    icon?: Icon;
    /**
     * 
     * @type {Cover}
     * @memberof UpdateDatabaseRequest
     */
    cover?: Cover;
    /**
     * 
     * @type {{ [key: string]: UpdateDatabaseRequestPropertiesValue; }}
     * @memberof UpdateDatabaseRequest
     */
    properties?: { [key: string]: UpdateDatabaseRequestPropertiesValue; };
    /**
     * 
     * @type {boolean}
     * @memberof UpdateDatabaseRequest
     */
    archived?: boolean;
}

/**
 * Check if a given object implements the UpdateDatabaseRequest interface.
 */
export function instanceOfUpdateDatabaseRequest(value: object): value is UpdateDatabaseRequest {
    return true;
}

export function UpdateDatabaseRequestFromJSON(json: any): UpdateDatabaseRequest {
    return UpdateDatabaseRequestFromJSONTyped(json, false);
}

export function UpdateDatabaseRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdateDatabaseRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'] == null ? undefined : ((json['title'] as Array<any>).map(RichTextItemFromJSON)),
        'icon': json['icon'] == null ? undefined : IconFromJSON(json['icon']),
        'cover': json['cover'] == null ? undefined : CoverFromJSON(json['cover']),
        'properties': json['properties'] == null ? undefined : (mapValues(json['properties'], UpdateDatabaseRequestPropertiesValueFromJSON)),
        'archived': json['archived'] == null ? undefined : json['archived'],
    };
}

export function UpdateDatabaseRequestToJSON(json: any): UpdateDatabaseRequest {
    return UpdateDatabaseRequestToJSONTyped(json, false);
}

export function UpdateDatabaseRequestToJSONTyped(value?: UpdateDatabaseRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'title': value['title'] == null ? undefined : ((value['title'] as Array<any>).map(RichTextItemToJSON)),
        'icon': IconToJSON(value['icon']),
        'cover': CoverToJSON(value['cover']),
        'properties': value['properties'] == null ? undefined : (mapValues(value['properties'], UpdateDatabaseRequestPropertiesValueToJSON)),
        'archived': value['archived'],
    };
}

