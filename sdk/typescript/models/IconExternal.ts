/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IconExternalDetail } from './IconExternalDetail';
import {
    IconExternalDetailFromJSON,
    IconExternalDetailFromJSONTyped,
    IconExternalDetailToJSON,
    IconExternalDetailToJSONTyped,
} from './IconExternalDetail';

/**
 * 
 * @export
 * @interface IconExternal
 */
export interface IconExternal {
    /**
     * 
     * @type {string}
     * @memberof IconExternal
     */
    type: IconExternalTypeEnum;
    /**
     * 
     * @type {IconExternalDetail}
     * @memberof IconExternal
     */
    external: IconExternalDetail;
}


/**
 * @export
 */
export const IconExternalTypeEnum = {
    External: 'external'
} as const;
export type IconExternalTypeEnum = typeof IconExternalTypeEnum[keyof typeof IconExternalTypeEnum];


/**
 * Check if a given object implements the IconExternal interface.
 */
export function instanceOfIconExternal(value: object): value is IconExternal {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('external' in value) || value['external'] === undefined) return false;
    return true;
}

export function IconExternalFromJSON(json: any): IconExternal {
    return IconExternalFromJSONTyped(json, false);
}

export function IconExternalFromJSONTyped(json: any, ignoreDiscriminator: boolean): IconExternal {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'external': IconExternalDetailFromJSON(json['external']),
    };
}

export function IconExternalToJSON(json: any): IconExternal {
    return IconExternalToJSONTyped(json, false);
}

export function IconExternalToJSONTyped(value?: IconExternal | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'external': IconExternalDetailToJSON(value['external']),
    };
}

