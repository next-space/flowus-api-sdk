/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ParentSpaceId
 */
export interface ParentSpaceId {
    /**
     * 
     * @type {string}
     * @memberof ParentSpaceId
     */
    type: ParentSpaceIdTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ParentSpaceId
     */
    space_id: string;
}


/**
 * @export
 */
export const ParentSpaceIdTypeEnum = {
    SpaceId: 'space_id'
} as const;
export type ParentSpaceIdTypeEnum = typeof ParentSpaceIdTypeEnum[keyof typeof ParentSpaceIdTypeEnum];


/**
 * Check if a given object implements the ParentSpaceId interface.
 */
export function instanceOfParentSpaceId(value: object): value is ParentSpaceId {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('space_id' in value) || value['space_id'] === undefined) return false;
    return true;
}

export function ParentSpaceIdFromJSON(json: any): ParentSpaceId {
    return ParentSpaceIdFromJSONTyped(json, false);
}

export function ParentSpaceIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParentSpaceId {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'space_id': json['space_id'],
    };
}

export function ParentSpaceIdToJSON(json: any): ParentSpaceId {
    return ParentSpaceIdToJSONTyped(json, false);
}

export function ParentSpaceIdToJSONTyped(value?: ParentSpaceId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'space_id': value['space_id'],
    };
}

