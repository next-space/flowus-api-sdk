/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface IconEmoji
 */
export interface IconEmoji {
    /**
     * 
     * @type {string}
     * @memberof IconEmoji
     */
    type: IconEmojiTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof IconEmoji
     */
    emoji: string;
}


/**
 * @export
 */
export const IconEmojiTypeEnum = {
    Emoji: 'emoji'
} as const;
export type IconEmojiTypeEnum = typeof IconEmojiTypeEnum[keyof typeof IconEmojiTypeEnum];


/**
 * Check if a given object implements the IconEmoji interface.
 */
export function instanceOfIconEmoji(value: object): value is IconEmoji {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('emoji' in value) || value['emoji'] === undefined) return false;
    return true;
}

export function IconEmojiFromJSON(json: any): IconEmoji {
    return IconEmojiFromJSONTyped(json, false);
}

export function IconEmojiFromJSONTyped(json: any, ignoreDiscriminator: boolean): IconEmoji {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'emoji': json['emoji'],
    };
}

export function IconEmojiToJSON(json: any): IconEmoji {
    return IconEmojiToJSONTyped(json, false);
}

export function IconEmojiToJSONTyped(value?: IconEmoji | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'emoji': value['emoji'],
    };
}

