/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RichTextItemMentionUser } from './RichTextItemMentionUser';
import {
    RichTextItemMentionUserFromJSON,
    RichTextItemMentionUserFromJSONTyped,
    RichTextItemMentionUserToJSON,
    RichTextItemMentionUserToJSONTyped,
} from './RichTextItemMentionUser';
import type { RichTextItemMentionDate } from './RichTextItemMentionDate';
import {
    RichTextItemMentionDateFromJSON,
    RichTextItemMentionDateFromJSONTyped,
    RichTextItemMentionDateToJSON,
    RichTextItemMentionDateToJSONTyped,
} from './RichTextItemMentionDate';

/**
 * 
 * @export
 * @interface RichTextItemMention
 */
export interface RichTextItemMention {
    /**
     * 
     * @type {string}
     * @memberof RichTextItemMention
     */
    type?: RichTextItemMentionTypeEnum;
    /**
     * 
     * @type {RichTextItemMentionUser}
     * @memberof RichTextItemMention
     */
    user?: RichTextItemMentionUser;
    /**
     * 
     * @type {RichTextItemMentionUser}
     * @memberof RichTextItemMention
     */
    page?: RichTextItemMentionUser;
    /**
     * 
     * @type {RichTextItemMentionDate}
     * @memberof RichTextItemMention
     */
    date?: RichTextItemMentionDate;
}


/**
 * @export
 */
export const RichTextItemMentionTypeEnum = {
    User: 'user',
    Page: 'page',
    Date: 'date'
} as const;
export type RichTextItemMentionTypeEnum = typeof RichTextItemMentionTypeEnum[keyof typeof RichTextItemMentionTypeEnum];


/**
 * Check if a given object implements the RichTextItemMention interface.
 */
export function instanceOfRichTextItemMention(value: object): value is RichTextItemMention {
    return true;
}

export function RichTextItemMentionFromJSON(json: any): RichTextItemMention {
    return RichTextItemMentionFromJSONTyped(json, false);
}

export function RichTextItemMentionFromJSONTyped(json: any, ignoreDiscriminator: boolean): RichTextItemMention {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'] == null ? undefined : json['type'],
        'user': json['user'] == null ? undefined : RichTextItemMentionUserFromJSON(json['user']),
        'page': json['page'] == null ? undefined : RichTextItemMentionUserFromJSON(json['page']),
        'date': json['date'] == null ? undefined : RichTextItemMentionDateFromJSON(json['date']),
    };
}

export function RichTextItemMentionToJSON(json: any): RichTextItemMention {
    return RichTextItemMentionToJSONTyped(json, false);
}

export function RichTextItemMentionToJSONTyped(value?: RichTextItemMention | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'user': RichTextItemMentionUserToJSON(value['user']),
        'page': RichTextItemMentionUserToJSON(value['page']),
        'date': RichTextItemMentionDateToJSON(value['date']),
    };
}

