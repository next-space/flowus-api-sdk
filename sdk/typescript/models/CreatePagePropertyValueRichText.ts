/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RichTextItem } from './RichTextItem';
import {
    RichTextItemFromJSON,
    RichTextItemFromJSONTyped,
    RichTextItemToJSON,
    RichTextItemToJSONTyped,
} from './RichTextItem';

/**
 * 
 * @export
 * @interface CreatePagePropertyValueRichText
 */
export interface CreatePagePropertyValueRichText {
    /**
     * 
     * @type {any}
     * @memberof CreatePagePropertyValueRichText
     */
    type: any | null;
    /**
     * 
     * @type {Array<RichTextItem>}
     * @memberof CreatePagePropertyValueRichText
     */
    rich_text: Array<RichTextItem>;
}

/**
 * Check if a given object implements the CreatePagePropertyValueRichText interface.
 */
export function instanceOfCreatePagePropertyValueRichText(value: object): value is CreatePagePropertyValueRichText {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('rich_text' in value) || value['rich_text'] === undefined) return false;
    return true;
}

export function CreatePagePropertyValueRichTextFromJSON(json: any): CreatePagePropertyValueRichText {
    return CreatePagePropertyValueRichTextFromJSONTyped(json, false);
}

export function CreatePagePropertyValueRichTextFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreatePagePropertyValueRichText {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'rich_text': ((json['rich_text'] as Array<any>).map(RichTextItemFromJSON)),
    };
}

export function CreatePagePropertyValueRichTextToJSON(json: any): CreatePagePropertyValueRichText {
    return CreatePagePropertyValueRichTextToJSONTyped(json, false);
}

export function CreatePagePropertyValueRichTextToJSONTyped(value?: CreatePagePropertyValueRichText | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'rich_text': ((value['rich_text'] as Array<any>).map(RichTextItemToJSON)),
    };
}

