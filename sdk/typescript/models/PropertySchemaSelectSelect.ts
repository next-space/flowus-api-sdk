/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertySchemaSelectOption } from './PropertySchemaSelectOption';
import {
    PropertySchemaSelectOptionFromJSON,
    PropertySchemaSelectOptionFromJSONTyped,
    PropertySchemaSelectOptionToJSON,
    PropertySchemaSelectOptionToJSONTyped,
} from './PropertySchemaSelectOption';

/**
 * 
 * @export
 * @interface PropertySchemaSelectSelect
 */
export interface PropertySchemaSelectSelect {
    /**
     * 
     * @type {Array<PropertySchemaSelectOption>}
     * @memberof PropertySchemaSelectSelect
     */
    options?: Array<PropertySchemaSelectOption>;
}

/**
 * Check if a given object implements the PropertySchemaSelectSelect interface.
 */
export function instanceOfPropertySchemaSelectSelect(value: object): value is PropertySchemaSelectSelect {
    return true;
}

export function PropertySchemaSelectSelectFromJSON(json: any): PropertySchemaSelectSelect {
    return PropertySchemaSelectSelectFromJSONTyped(json, false);
}

export function PropertySchemaSelectSelectFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySchemaSelectSelect {
    if (json == null) {
        return json;
    }
    return {
        
        'options': json['options'] == null ? undefined : ((json['options'] as Array<any>).map(PropertySchemaSelectOptionFromJSON)),
    };
}

export function PropertySchemaSelectSelectToJSON(json: any): PropertySchemaSelectSelect {
    return PropertySchemaSelectSelectToJSONTyped(json, false);
}

export function PropertySchemaSelectSelectToJSONTyped(value?: PropertySchemaSelectSelect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'options': value['options'] == null ? undefined : ((value['options'] as Array<any>).map(PropertySchemaSelectOptionToJSON)),
    };
}

