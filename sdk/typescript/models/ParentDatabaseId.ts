/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ParentDatabaseId
 */
export interface ParentDatabaseId {
    /**
     * 
     * @type {string}
     * @memberof ParentDatabaseId
     */
    type: ParentDatabaseIdTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ParentDatabaseId
     */
    database_id: string;
}


/**
 * @export
 */
export const ParentDatabaseIdTypeEnum = {
    DatabaseId: 'database_id'
} as const;
export type ParentDatabaseIdTypeEnum = typeof ParentDatabaseIdTypeEnum[keyof typeof ParentDatabaseIdTypeEnum];


/**
 * Check if a given object implements the ParentDatabaseId interface.
 */
export function instanceOfParentDatabaseId(value: object): value is ParentDatabaseId {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('database_id' in value) || value['database_id'] === undefined) return false;
    return true;
}

export function ParentDatabaseIdFromJSON(json: any): ParentDatabaseId {
    return ParentDatabaseIdFromJSONTyped(json, false);
}

export function ParentDatabaseIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParentDatabaseId {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'database_id': json['database_id'],
    };
}

export function ParentDatabaseIdToJSON(json: any): ParentDatabaseId {
    return ParentDatabaseIdToJSONTyped(json, false);
}

export function ParentDatabaseIdToJSONTyped(value?: ParentDatabaseId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'database_id': value['database_id'],
    };
}

