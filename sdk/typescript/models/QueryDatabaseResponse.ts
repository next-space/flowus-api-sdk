/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Page } from './Page';
import {
    PageFromJSON,
    PageFromJSONTyped,
    PageToJSON,
    PageToJSONTyped,
} from './Page';

/**
 * 
 * @export
 * @interface QueryDatabaseResponse
 */
export interface QueryDatabaseResponse {
    /**
     * 
     * @type {string}
     * @memberof QueryDatabaseResponse
     */
    object?: QueryDatabaseResponseObjectEnum;
    /**
     * 
     * @type {Array<Page>}
     * @memberof QueryDatabaseResponse
     */
    results?: Array<Page>;
    /**
     * 下一页游标，使用最后一个项目的ID作为游标值
     * @type {string}
     * @memberof QueryDatabaseResponse
     */
    next_cursor?: string;
    /**
     * 
     * @type {boolean}
     * @memberof QueryDatabaseResponse
     */
    has_more?: boolean;
    /**
     * 
     * @type {string}
     * @memberof QueryDatabaseResponse
     */
    type?: QueryDatabaseResponseTypeEnum;
    /**
     * 
     * @type {object}
     * @memberof QueryDatabaseResponse
     */
    page?: object;
}


/**
 * @export
 */
export const QueryDatabaseResponseObjectEnum = {
    List: 'list'
} as const;
export type QueryDatabaseResponseObjectEnum = typeof QueryDatabaseResponseObjectEnum[keyof typeof QueryDatabaseResponseObjectEnum];

/**
 * @export
 */
export const QueryDatabaseResponseTypeEnum = {
    Page: 'page'
} as const;
export type QueryDatabaseResponseTypeEnum = typeof QueryDatabaseResponseTypeEnum[keyof typeof QueryDatabaseResponseTypeEnum];


/**
 * Check if a given object implements the QueryDatabaseResponse interface.
 */
export function instanceOfQueryDatabaseResponse(value: object): value is QueryDatabaseResponse {
    return true;
}

export function QueryDatabaseResponseFromJSON(json: any): QueryDatabaseResponse {
    return QueryDatabaseResponseFromJSONTyped(json, false);
}

export function QueryDatabaseResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): QueryDatabaseResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'] == null ? undefined : json['object'],
        'results': json['results'] == null ? undefined : ((json['results'] as Array<any>).map(PageFromJSON)),
        'next_cursor': json['next_cursor'] == null ? undefined : json['next_cursor'],
        'has_more': json['has_more'] == null ? undefined : json['has_more'],
        'type': json['type'] == null ? undefined : json['type'],
        'page': json['page'] == null ? undefined : json['page'],
    };
}

export function QueryDatabaseResponseToJSON(json: any): QueryDatabaseResponse {
    return QueryDatabaseResponseToJSONTyped(json, false);
}

export function QueryDatabaseResponseToJSONTyped(value?: QueryDatabaseResponse | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'results': value['results'] == null ? undefined : ((value['results'] as Array<any>).map(PageToJSON)),
        'next_cursor': value['next_cursor'],
        'has_more': value['has_more'],
        'type': value['type'],
        'page': value['page'],
    };
}

