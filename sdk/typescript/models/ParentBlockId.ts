/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ParentBlockId
 */
export interface ParentBlockId {
    /**
     * 
     * @type {string}
     * @memberof ParentBlockId
     */
    type: ParentBlockIdTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof ParentBlockId
     */
    block_id: string;
}


/**
 * @export
 */
export const ParentBlockIdTypeEnum = {
    BlockId: 'block_id'
} as const;
export type ParentBlockIdTypeEnum = typeof ParentBlockIdTypeEnum[keyof typeof ParentBlockIdTypeEnum];


/**
 * Check if a given object implements the ParentBlockId interface.
 */
export function instanceOfParentBlockId(value: object): value is ParentBlockId {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('block_id' in value) || value['block_id'] === undefined) return false;
    return true;
}

export function ParentBlockIdFromJSON(json: any): ParentBlockId {
    return ParentBlockIdFromJSONTyped(json, false);
}

export function ParentBlockIdFromJSONTyped(json: any, ignoreDiscriminator: boolean): ParentBlockId {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'block_id': json['block_id'],
    };
}

export function ParentBlockIdToJSON(json: any): ParentBlockId {
    return ParentBlockIdToJSONTyped(json, false);
}

export function ParentBlockIdToJSONTyped(value?: ParentBlockId | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'block_id': value['block_id'],
    };
}

