/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertySchemaSelectOption
 */
export interface PropertySchemaSelectOption {
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaSelectOption
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaSelectOption
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaSelectOption
     */
    color?: PropertySchemaSelectOptionColorEnum;
}


/**
 * @export
 */
export const PropertySchemaSelectOptionColorEnum = {
    Default: 'default',
    Gray: 'gray',
    Brown: 'brown',
    Orange: 'orange',
    Yellow: 'yellow',
    Green: 'green',
    Blue: 'blue',
    Purple: 'purple',
    Pink: 'pink',
    Red: 'red'
} as const;
export type PropertySchemaSelectOptionColorEnum = typeof PropertySchemaSelectOptionColorEnum[keyof typeof PropertySchemaSelectOptionColorEnum];


/**
 * Check if a given object implements the PropertySchemaSelectOption interface.
 */
export function instanceOfPropertySchemaSelectOption(value: object): value is PropertySchemaSelectOption {
    return true;
}

export function PropertySchemaSelectOptionFromJSON(json: any): PropertySchemaSelectOption {
    return PropertySchemaSelectOptionFromJSONTyped(json, false);
}

export function PropertySchemaSelectOptionFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySchemaSelectOption {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'color': json['color'] == null ? undefined : json['color'],
    };
}

export function PropertySchemaSelectOptionToJSON(json: any): PropertySchemaSelectOption {
    return PropertySchemaSelectOptionToJSONTyped(json, false);
}

export function PropertySchemaSelectOptionToJSONTyped(value?: PropertySchemaSelectOption | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'color': value['color'],
    };
}

