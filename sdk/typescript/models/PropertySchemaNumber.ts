/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertySchemaNumberNumber } from './PropertySchemaNumberNumber';
import {
    PropertySchemaNumberNumberFromJSON,
    PropertySchemaNumberNumberFromJSONTyped,
    PropertySchemaNumberNumberToJSON,
    PropertySchemaNumberNumberToJSONTyped,
} from './PropertySchemaNumberNumber';

/**
 * 
 * @export
 * @interface PropertySchemaNumber
 */
export interface PropertySchemaNumber {
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaNumber
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaNumber
     */
    name?: string;
    /**
     * 
     * @type {any}
     * @memberof PropertySchemaNumber
     */
    type?: any | null;
    /**
     * 
     * @type {PropertySchemaNumberNumber}
     * @memberof PropertySchemaNumber
     */
    number?: PropertySchemaNumberNumber;
}

/**
 * Check if a given object implements the PropertySchemaNumber interface.
 */
export function instanceOfPropertySchemaNumber(value: object): value is PropertySchemaNumber {
    return true;
}

export function PropertySchemaNumberFromJSON(json: any): PropertySchemaNumber {
    return PropertySchemaNumberFromJSONTyped(json, false);
}

export function PropertySchemaNumberFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySchemaNumber {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'number': json['number'] == null ? undefined : PropertySchemaNumberNumberFromJSON(json['number']),
    };
}

export function PropertySchemaNumberToJSON(json: any): PropertySchemaNumber {
    return PropertySchemaNumberToJSONTyped(json, false);
}

export function PropertySchemaNumberToJSONTyped(value?: PropertySchemaNumber | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'number': PropertySchemaNumberNumberToJSON(value['number']),
    };
}

