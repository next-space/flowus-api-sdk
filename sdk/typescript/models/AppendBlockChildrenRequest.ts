/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AppendBlockChildrenRequestChildrenInner } from './AppendBlockChildrenRequestChildrenInner';
import {
    AppendBlockChildrenRequestChildrenInnerFromJSON,
    AppendBlockChildrenRequestChildrenInnerFromJSONTyped,
    AppendBlockChildrenRequestChildrenInnerToJSON,
    AppendBlockChildrenRequestChildrenInnerToJSONTyped,
} from './AppendBlockChildrenRequestChildrenInner';

/**
 * 
 * @export
 * @interface AppendBlockChildrenRequest
 */
export interface AppendBlockChildrenRequest {
    /**
     * 要创建的子块列表，最多100个
     * @type {Array<AppendBlockChildrenRequestChildrenInner>}
     * @memberof AppendBlockChildrenRequest
     */
    children: Array<AppendBlockChildrenRequestChildrenInner>;
}

/**
 * Check if a given object implements the AppendBlockChildrenRequest interface.
 */
export function instanceOfAppendBlockChildrenRequest(value: object): value is AppendBlockChildrenRequest {
    if (!('children' in value) || value['children'] === undefined) return false;
    return true;
}

export function AppendBlockChildrenRequestFromJSON(json: any): AppendBlockChildrenRequest {
    return AppendBlockChildrenRequestFromJSONTyped(json, false);
}

export function AppendBlockChildrenRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): AppendBlockChildrenRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'children': ((json['children'] as Array<any>).map(AppendBlockChildrenRequestChildrenInnerFromJSON)),
    };
}

export function AppendBlockChildrenRequestToJSON(json: any): AppendBlockChildrenRequest {
    return AppendBlockChildrenRequestToJSONTyped(json, false);
}

export function AppendBlockChildrenRequestToJSONTyped(value?: AppendBlockChildrenRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'children': ((value['children'] as Array<any>).map(AppendBlockChildrenRequestChildrenInnerToJSON)),
    };
}

