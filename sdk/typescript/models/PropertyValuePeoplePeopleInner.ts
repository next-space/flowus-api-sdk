/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PropertyValuePeoplePeopleInner
 */
export interface PropertyValuePeoplePeopleInner {
    /**
     * 
     * @type {string}
     * @memberof PropertyValuePeoplePeopleInner
     */
    object?: PropertyValuePeoplePeopleInnerObjectEnum;
    /**
     * 
     * @type {string}
     * @memberof PropertyValuePeoplePeopleInner
     */
    id?: string;
}


/**
 * @export
 */
export const PropertyValuePeoplePeopleInnerObjectEnum = {
    User: 'user'
} as const;
export type PropertyValuePeoplePeopleInnerObjectEnum = typeof PropertyValuePeoplePeopleInnerObjectEnum[keyof typeof PropertyValuePeoplePeopleInnerObjectEnum];


/**
 * Check if a given object implements the PropertyValuePeoplePeopleInner interface.
 */
export function instanceOfPropertyValuePeoplePeopleInner(value: object): value is PropertyValuePeoplePeopleInner {
    return true;
}

export function PropertyValuePeoplePeopleInnerFromJSON(json: any): PropertyValuePeoplePeopleInner {
    return PropertyValuePeoplePeopleInnerFromJSONTyped(json, false);
}

export function PropertyValuePeoplePeopleInnerFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyValuePeoplePeopleInner {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'] == null ? undefined : json['object'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function PropertyValuePeoplePeopleInnerToJSON(json: any): PropertyValuePeoplePeopleInner {
    return PropertyValuePeoplePeopleInnerToJSONTyped(json, false);
}

export function PropertyValuePeoplePeopleInnerToJSONTyped(value?: PropertyValuePeoplePeopleInner | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
    };
}

