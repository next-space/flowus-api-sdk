/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Cover } from './Cover';
import {
    CoverFromJSON,
    CoverFromJSONTyped,
    CoverToJSON,
    CoverToJSONTyped,
} from './Cover';
import type { Parent } from './Parent';
import {
    ParentFromJSON,
    ParentFromJSONTyped,
    ParentToJSON,
    ParentToJSONTyped,
} from './Parent';
import type { PropertySchema } from './PropertySchema';
import {
    PropertySchemaFromJSON,
    PropertySchemaFromJSONTyped,
    PropertySchemaToJSON,
    PropertySchemaToJSONTyped,
} from './PropertySchema';
import type { RichTextItem } from './RichTextItem';
import {
    RichTextItemFromJSON,
    RichTextItemFromJSONTyped,
    RichTextItemToJSON,
    RichTextItemToJSONTyped,
} from './RichTextItem';
import type { Icon } from './Icon';
import {
    IconFromJSON,
    IconFromJSONTyped,
    IconToJSON,
    IconToJSONTyped,
} from './Icon';

/**
 * 
 * @export
 * @interface CreateDatabaseRequest
 */
export interface CreateDatabaseRequest {
    /**
     * 
     * @type {Parent}
     * @memberof CreateDatabaseRequest
     */
    parent?: Parent;
    /**
     * 
     * @type {Array<RichTextItem>}
     * @memberof CreateDatabaseRequest
     */
    title: Array<RichTextItem>;
    /**
     * 
     * @type {Icon}
     * @memberof CreateDatabaseRequest
     */
    icon?: Icon;
    /**
     * 
     * @type {Cover}
     * @memberof CreateDatabaseRequest
     */
    cover?: Cover;
    /**
     * 
     * @type {{ [key: string]: PropertySchema; }}
     * @memberof CreateDatabaseRequest
     */
    properties: { [key: string]: PropertySchema; };
    /**
     * 是否为内联数据库
     * @type {boolean}
     * @memberof CreateDatabaseRequest
     */
    is_inline?: boolean;
}

/**
 * Check if a given object implements the CreateDatabaseRequest interface.
 */
export function instanceOfCreateDatabaseRequest(value: object): value is CreateDatabaseRequest {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('properties' in value) || value['properties'] === undefined) return false;
    return true;
}

export function CreateDatabaseRequestFromJSON(json: any): CreateDatabaseRequest {
    return CreateDatabaseRequestFromJSONTyped(json, false);
}

export function CreateDatabaseRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateDatabaseRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'parent': json['parent'] == null ? undefined : ParentFromJSON(json['parent']),
        'title': ((json['title'] as Array<any>).map(RichTextItemFromJSON)),
        'icon': json['icon'] == null ? undefined : IconFromJSON(json['icon']),
        'cover': json['cover'] == null ? undefined : CoverFromJSON(json['cover']),
        'properties': (mapValues(json['properties'], PropertySchemaFromJSON)),
        'is_inline': json['is_inline'] == null ? undefined : json['is_inline'],
    };
}

export function CreateDatabaseRequestToJSON(json: any): CreateDatabaseRequest {
    return CreateDatabaseRequestToJSONTyped(json, false);
}

export function CreateDatabaseRequestToJSONTyped(value?: CreateDatabaseRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'parent': ParentToJSON(value['parent']),
        'title': ((value['title'] as Array<any>).map(RichTextItemToJSON)),
        'icon': IconToJSON(value['icon']),
        'cover': CoverToJSON(value['cover']),
        'properties': (mapValues(value['properties'], PropertySchemaToJSON)),
        'is_inline': value['is_inline'],
    };
}

