/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Cover } from './Cover';
import {
    CoverFromJSON,
    CoverFromJSONTyped,
    CoverToJSON,
    CoverToJSONTyped,
} from './Cover';
import type { PropertyValue } from './PropertyValue';
import {
    PropertyValueFromJSON,
    PropertyValueFromJSONTyped,
    PropertyValueToJSON,
    PropertyValueToJSONTyped,
} from './PropertyValue';
import type { Icon } from './Icon';
import {
    IconFromJSON,
    IconFromJSONTyped,
    IconToJSON,
    IconToJSONTyped,
} from './Icon';

/**
 * 
 * @export
 * @interface UpdatePageRequest
 */
export interface UpdatePageRequest {
    /**
     * 
     * @type {{ [key: string]: PropertyValue; }}
     * @memberof UpdatePageRequest
     */
    properties?: { [key: string]: PropertyValue; };
    /**
     * 
     * @type {Icon}
     * @memberof UpdatePageRequest
     */
    icon?: Icon;
    /**
     * 
     * @type {Cover}
     * @memberof UpdatePageRequest
     */
    cover?: Cover;
    /**
     * 
     * @type {boolean}
     * @memberof UpdatePageRequest
     */
    archived?: boolean;
}

/**
 * Check if a given object implements the UpdatePageRequest interface.
 */
export function instanceOfUpdatePageRequest(value: object): value is UpdatePageRequest {
    return true;
}

export function UpdatePageRequestFromJSON(json: any): UpdatePageRequest {
    return UpdatePageRequestFromJSONTyped(json, false);
}

export function UpdatePageRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpdatePageRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'properties': json['properties'] == null ? undefined : (mapValues(json['properties'], PropertyValueFromJSON)),
        'icon': json['icon'] == null ? undefined : IconFromJSON(json['icon']),
        'cover': json['cover'] == null ? undefined : CoverFromJSON(json['cover']),
        'archived': json['archived'] == null ? undefined : json['archived'],
    };
}

export function UpdatePageRequestToJSON(json: any): UpdatePageRequest {
    return UpdatePageRequestToJSONTyped(json, false);
}

export function UpdatePageRequestToJSONTyped(value?: UpdatePageRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'properties': value['properties'] == null ? undefined : (mapValues(value['properties'], PropertyValueToJSON)),
        'icon': IconToJSON(value['icon']),
        'cover': CoverToJSON(value['cover']),
        'archived': value['archived'],
    };
}

