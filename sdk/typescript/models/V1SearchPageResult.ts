/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { V1SearchPageResultProperties } from './V1SearchPageResultProperties';
import {
    V1SearchPageResultPropertiesFromJSON,
    V1SearchPageResultPropertiesFromJSONTyped,
    V1SearchPageResultPropertiesToJSON,
    V1SearchPageResultPropertiesToJSONTyped,
} from './V1SearchPageResultProperties';
import type { V1SearchPageResultParent } from './V1SearchPageResultParent';
import {
    V1SearchPageResultParentFromJSON,
    V1SearchPageResultParentFromJSONTyped,
    V1SearchPageResultParentToJSON,
    V1SearchPageResultParentToJSONTyped,
} from './V1SearchPageResultParent';

/**
 * 
 * @export
 * @interface V1SearchPageResult
 */
export interface V1SearchPageResult {
    /**
     * 
     * @type {string}
     * @memberof V1SearchPageResult
     */
    object?: V1SearchPageResultObjectEnum;
    /**
     * 页面的唯一标识符
     * @type {string}
     * @memberof V1SearchPageResult
     */
    id?: string;
    /**
     * 页面创建时间
     * @type {Date}
     * @memberof V1SearchPageResult
     */
    created_time?: Date;
    /**
     * 页面最后编辑时间
     * @type {Date}
     * @memberof V1SearchPageResult
     */
    last_edited_time?: Date;
    /**
     * 
     * @type {V1SearchPageResultParent}
     * @memberof V1SearchPageResult
     */
    parent?: V1SearchPageResultParent;
    /**
     * 页面是否已归档
     * @type {boolean}
     * @memberof V1SearchPageResult
     */
    archived?: boolean;
    /**
     * 
     * @type {V1SearchPageResultProperties}
     * @memberof V1SearchPageResult
     */
    properties?: V1SearchPageResultProperties;
}


/**
 * @export
 */
export const V1SearchPageResultObjectEnum = {
    Page: 'page'
} as const;
export type V1SearchPageResultObjectEnum = typeof V1SearchPageResultObjectEnum[keyof typeof V1SearchPageResultObjectEnum];


/**
 * Check if a given object implements the V1SearchPageResult interface.
 */
export function instanceOfV1SearchPageResult(value: object): value is V1SearchPageResult {
    return true;
}

export function V1SearchPageResultFromJSON(json: any): V1SearchPageResult {
    return V1SearchPageResultFromJSONTyped(json, false);
}

export function V1SearchPageResultFromJSONTyped(json: any, ignoreDiscriminator: boolean): V1SearchPageResult {
    if (json == null) {
        return json;
    }
    return {
        
        'object': json['object'] == null ? undefined : json['object'],
        'id': json['id'] == null ? undefined : json['id'],
        'created_time': json['created_time'] == null ? undefined : (new Date(json['created_time'])),
        'last_edited_time': json['last_edited_time'] == null ? undefined : (new Date(json['last_edited_time'])),
        'parent': json['parent'] == null ? undefined : V1SearchPageResultParentFromJSON(json['parent']),
        'archived': json['archived'] == null ? undefined : json['archived'],
        'properties': json['properties'] == null ? undefined : V1SearchPageResultPropertiesFromJSON(json['properties']),
    };
}

export function V1SearchPageResultToJSON(json: any): V1SearchPageResult {
    return V1SearchPageResultToJSONTyped(json, false);
}

export function V1SearchPageResultToJSONTyped(value?: V1SearchPageResult | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'object': value['object'],
        'id': value['id'],
        'created_time': value['created_time'] == null ? undefined : ((value['created_time']).toISOString()),
        'last_edited_time': value['last_edited_time'] == null ? undefined : ((value['last_edited_time']).toISOString()),
        'parent': V1SearchPageResultParentToJSON(value['parent']),
        'archived': value['archived'],
        'properties': V1SearchPageResultPropertiesToJSON(value['properties']),
    };
}

