/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertyValueMultiSelectMultiSelectInner } from './PropertyValueMultiSelectMultiSelectInner';
import {
    PropertyValueMultiSelectMultiSelectInnerFromJSON,
    PropertyValueMultiSelectMultiSelectInnerFromJSONTyped,
    PropertyValueMultiSelectMultiSelectInnerToJSON,
    PropertyValueMultiSelectMultiSelectInnerToJSONTyped,
} from './PropertyValueMultiSelectMultiSelectInner';

/**
 * 
 * @export
 * @interface PropertyValueMultiSelect
 */
export interface PropertyValueMultiSelect {
    /**
     * 
     * @type {string}
     * @memberof PropertyValueMultiSelect
     */
    id?: string;
    /**
     * 
     * @type {any}
     * @memberof PropertyValueMultiSelect
     */
    type?: any | null;
    /**
     * 
     * @type {Array<PropertyValueMultiSelectMultiSelectInner>}
     * @memberof PropertyValueMultiSelect
     */
    multi_select?: Array<PropertyValueMultiSelectMultiSelectInner>;
}

/**
 * Check if a given object implements the PropertyValueMultiSelect interface.
 */
export function instanceOfPropertyValueMultiSelect(value: object): value is PropertyValueMultiSelect {
    return true;
}

export function PropertyValueMultiSelectFromJSON(json: any): PropertyValueMultiSelect {
    return PropertyValueMultiSelectFromJSONTyped(json, false);
}

export function PropertyValueMultiSelectFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertyValueMultiSelect {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'type': json['type'] == null ? undefined : json['type'],
        'multi_select': json['multi_select'] == null ? undefined : ((json['multi_select'] as Array<any>).map(PropertyValueMultiSelectMultiSelectInnerFromJSON)),
    };
}

export function PropertyValueMultiSelectToJSON(json: any): PropertyValueMultiSelect {
    return PropertyValueMultiSelectToJSONTyped(json, false);
}

export function PropertyValueMultiSelectToJSONTyped(value?: PropertyValueMultiSelect | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'type': value['type'],
        'multi_select': value['multi_select'] == null ? undefined : ((value['multi_select'] as Array<any>).map(PropertyValueMultiSelectMultiSelectInnerToJSON)),
    };
}

