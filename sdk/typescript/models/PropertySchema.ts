/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertySchemaFiles } from './PropertySchemaFiles';
import {
    PropertySchemaFilesFromJSON,
    PropertySchemaFilesFromJSONTyped,
    PropertySchemaFilesToJSON,
    PropertySchemaFilesToJSONTyped,
} from './PropertySchemaFiles';
import type { PropertySchemaTitle } from './PropertySchemaTitle';
import {
    PropertySchemaTitleFromJSON,
    PropertySchemaTitleFromJSONTyped,
    PropertySchemaTitleToJSON,
    PropertySchemaTitleToJSONTyped,
} from './PropertySchemaTitle';
import type { PropertySchemaSelect } from './PropertySchemaSelect';
import {
    PropertySchemaSelectFromJSON,
    PropertySchemaSelectFromJSONTyped,
    PropertySchemaSelectToJSON,
    PropertySchemaSelectToJSONTyped,
} from './PropertySchemaSelect';
import type { PropertySchemaSelectSelect } from './PropertySchemaSelectSelect';
import {
    PropertySchemaSelectSelectFromJSON,
    PropertySchemaSelectSelectFromJSONTyped,
    PropertySchemaSelectSelectToJSON,
    PropertySchemaSelectSelectToJSONTyped,
} from './PropertySchemaSelectSelect';
import type { PropertySchemaPhoneNumber } from './PropertySchemaPhoneNumber';
import {
    PropertySchemaPhoneNumberFromJSON,
    PropertySchemaPhoneNumberFromJSONTyped,
    PropertySchemaPhoneNumberToJSON,
    PropertySchemaPhoneNumberToJSONTyped,
} from './PropertySchemaPhoneNumber';
import type { PropertySchemaRelation } from './PropertySchemaRelation';
import {
    PropertySchemaRelationFromJSON,
    PropertySchemaRelationFromJSONTyped,
    PropertySchemaRelationToJSON,
    PropertySchemaRelationToJSONTyped,
} from './PropertySchemaRelation';
import type { PropertySchemaNumberNumber } from './PropertySchemaNumberNumber';
import {
    PropertySchemaNumberNumberFromJSON,
    PropertySchemaNumberNumberFromJSONTyped,
    PropertySchemaNumberNumberToJSON,
    PropertySchemaNumberNumberToJSONTyped,
} from './PropertySchemaNumberNumber';
import type { PropertySchemaNumber } from './PropertySchemaNumber';
import {
    PropertySchemaNumberFromJSON,
    PropertySchemaNumberFromJSONTyped,
    PropertySchemaNumberToJSON,
    PropertySchemaNumberToJSONTyped,
} from './PropertySchemaNumber';
import type { PropertySchemaPeople } from './PropertySchemaPeople';
import {
    PropertySchemaPeopleFromJSON,
    PropertySchemaPeopleFromJSONTyped,
    PropertySchemaPeopleToJSON,
    PropertySchemaPeopleToJSONTyped,
} from './PropertySchemaPeople';
import type { PropertySchemaDate } from './PropertySchemaDate';
import {
    PropertySchemaDateFromJSON,
    PropertySchemaDateFromJSONTyped,
    PropertySchemaDateToJSON,
    PropertySchemaDateToJSONTyped,
} from './PropertySchemaDate';
import type { PropertySchemaEmail } from './PropertySchemaEmail';
import {
    PropertySchemaEmailFromJSON,
    PropertySchemaEmailFromJSONTyped,
    PropertySchemaEmailToJSON,
    PropertySchemaEmailToJSONTyped,
} from './PropertySchemaEmail';
import type { PropertySchemaMultiSelect } from './PropertySchemaMultiSelect';
import {
    PropertySchemaMultiSelectFromJSON,
    PropertySchemaMultiSelectFromJSONTyped,
    PropertySchemaMultiSelectToJSON,
    PropertySchemaMultiSelectToJSONTyped,
} from './PropertySchemaMultiSelect';
import type { PropertySchemaRichText } from './PropertySchemaRichText';
import {
    PropertySchemaRichTextFromJSON,
    PropertySchemaRichTextFromJSONTyped,
    PropertySchemaRichTextToJSON,
    PropertySchemaRichTextToJSONTyped,
} from './PropertySchemaRichText';
import type { PropertySchemaUrl } from './PropertySchemaUrl';
import {
    PropertySchemaUrlFromJSON,
    PropertySchemaUrlFromJSONTyped,
    PropertySchemaUrlToJSON,
    PropertySchemaUrlToJSONTyped,
} from './PropertySchemaUrl';
import type { PropertySchemaRelationRelation } from './PropertySchemaRelationRelation';
import {
    PropertySchemaRelationRelationFromJSON,
    PropertySchemaRelationRelationFromJSONTyped,
    PropertySchemaRelationRelationToJSON,
    PropertySchemaRelationRelationToJSONTyped,
} from './PropertySchemaRelationRelation';
import type { PropertySchemaCheckbox } from './PropertySchemaCheckbox';
import {
    PropertySchemaCheckboxFromJSON,
    PropertySchemaCheckboxFromJSONTyped,
    PropertySchemaCheckboxToJSON,
    PropertySchemaCheckboxToJSONTyped,
} from './PropertySchemaCheckbox';
import type { PropertySchemaFormula } from './PropertySchemaFormula';
import {
    PropertySchemaFormulaFromJSON,
    PropertySchemaFormulaFromJSONTyped,
    PropertySchemaFormulaToJSON,
    PropertySchemaFormulaToJSONTyped,
} from './PropertySchemaFormula';
import type { PropertySchemaFormulaFormula } from './PropertySchemaFormulaFormula';
import {
    PropertySchemaFormulaFormulaFromJSON,
    PropertySchemaFormulaFormulaFromJSONTyped,
    PropertySchemaFormulaFormulaToJSON,
    PropertySchemaFormulaFormulaToJSONTyped,
} from './PropertySchemaFormulaFormula';

/**
 * 
 * @export
 * @interface PropertySchema
 */
export interface PropertySchema {
    /**
     * 
     * @type {string}
     * @memberof PropertySchema
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertySchema
     */
    name?: string;
    /**
     * 
     * @type {any}
     * @memberof PropertySchema
     */
    type?: any | null;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    title?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    rich_text?: object;
    /**
     * 
     * @type {PropertySchemaNumberNumber}
     * @memberof PropertySchema
     */
    number?: PropertySchemaNumberNumber;
    /**
     * 
     * @type {PropertySchemaSelectSelect}
     * @memberof PropertySchema
     */
    select?: PropertySchemaSelectSelect;
    /**
     * 
     * @type {PropertySchemaSelectSelect}
     * @memberof PropertySchema
     */
    multi_select?: PropertySchemaSelectSelect;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    date?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    people?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    files?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    checkbox?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    url?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    email?: object;
    /**
     * 
     * @type {object}
     * @memberof PropertySchema
     */
    phone_number?: object;
    /**
     * 
     * @type {PropertySchemaFormulaFormula}
     * @memberof PropertySchema
     */
    formula?: PropertySchemaFormulaFormula;
    /**
     * 
     * @type {PropertySchemaRelationRelation}
     * @memberof PropertySchema
     */
    relation?: PropertySchemaRelationRelation;
}

/**
 * Check if a given object implements the PropertySchema interface.
 */
export function instanceOfPropertySchema(value: object): value is PropertySchema {
    return true;
}

export function PropertySchemaFromJSON(json: any): PropertySchema {
    return PropertySchemaFromJSONTyped(json, false);
}

export function PropertySchemaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySchema {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'title': json['title'] == null ? undefined : json['title'],
        'rich_text': json['rich_text'] == null ? undefined : json['rich_text'],
        'number': json['number'] == null ? undefined : PropertySchemaNumberNumberFromJSON(json['number']),
        'select': json['select'] == null ? undefined : PropertySchemaSelectSelectFromJSON(json['select']),
        'multi_select': json['multi_select'] == null ? undefined : PropertySchemaSelectSelectFromJSON(json['multi_select']),
        'date': json['date'] == null ? undefined : json['date'],
        'people': json['people'] == null ? undefined : json['people'],
        'files': json['files'] == null ? undefined : json['files'],
        'checkbox': json['checkbox'] == null ? undefined : json['checkbox'],
        'url': json['url'] == null ? undefined : json['url'],
        'email': json['email'] == null ? undefined : json['email'],
        'phone_number': json['phone_number'] == null ? undefined : json['phone_number'],
        'formula': json['formula'] == null ? undefined : PropertySchemaFormulaFormulaFromJSON(json['formula']),
        'relation': json['relation'] == null ? undefined : PropertySchemaRelationRelationFromJSON(json['relation']),
    };
}

export function PropertySchemaToJSON(json: any): PropertySchema {
    return PropertySchemaToJSONTyped(json, false);
}

export function PropertySchemaToJSONTyped(value?: PropertySchema | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'title': value['title'],
        'rich_text': value['rich_text'],
        'number': PropertySchemaNumberNumberToJSON(value['number']),
        'select': PropertySchemaSelectSelectToJSON(value['select']),
        'multi_select': PropertySchemaSelectSelectToJSON(value['multi_select']),
        'date': value['date'],
        'people': value['people'],
        'files': value['files'],
        'checkbox': value['checkbox'],
        'url': value['url'],
        'email': value['email'],
        'phone_number': value['phone_number'],
        'formula': PropertySchemaFormulaFormulaToJSON(value['formula']),
        'relation': PropertySchemaRelationRelationToJSON(value['relation']),
    };
}

