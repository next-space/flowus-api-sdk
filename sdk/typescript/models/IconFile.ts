/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IconFileDetail } from './IconFileDetail';
import {
    IconFileDetailFromJSON,
    IconFileDetailFromJSONTyped,
    IconFileDetailToJSON,
    IconFileDetailToJSONTyped,
} from './IconFileDetail';

/**
 * 
 * @export
 * @interface IconFile
 */
export interface IconFile {
    /**
     * 
     * @type {string}
     * @memberof IconFile
     */
    type: IconFileTypeEnum;
    /**
     * 
     * @type {IconFileDetail}
     * @memberof IconFile
     */
    file: IconFileDetail;
}


/**
 * @export
 */
export const IconFileTypeEnum = {
    File: 'file'
} as const;
export type IconFileTypeEnum = typeof IconFileTypeEnum[keyof typeof IconFileTypeEnum];


/**
 * Check if a given object implements the IconFile interface.
 */
export function instanceOfIconFile(value: object): value is IconFile {
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('file' in value) || value['file'] === undefined) return false;
    return true;
}

export function IconFileFromJSON(json: any): IconFile {
    return IconFileFromJSONTyped(json, false);
}

export function IconFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): IconFile {
    if (json == null) {
        return json;
    }
    return {
        
        'type': json['type'],
        'file': IconFileDetailFromJSON(json['file']),
    };
}

export function IconFileToJSON(json: any): IconFile {
    return IconFileToJSONTyped(json, false);
}

export function IconFileToJSONTyped(value?: IconFile | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'type': value['type'],
        'file': IconFileDetailToJSON(value['file']),
    };
}

