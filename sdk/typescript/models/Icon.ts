/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { IconEmoji } from './IconEmoji';
import {
    instanceOfIconEmoji,
    IconEmojiFromJSON,
    IconEmojiFromJSONTyped,
    IconEmojiToJSON,
} from './IconEmoji';
import type { IconExternal } from './IconExternal';
import {
    instanceOfIconExternal,
    IconExternalFromJSON,
    IconExternalFromJSONTyped,
    IconExternalToJSON,
} from './IconExternal';
import type { IconFile } from './IconFile';
import {
    instanceOfIconFile,
    IconFileFromJSON,
    IconFileFromJSONTyped,
    IconFileToJSON,
} from './IconFile';

/**
 * @type Icon
 * 
 * @export
 */
export type Icon = IconEmoji | IconExternal | IconFile;

export function IconFromJSON(json: any): Icon {
    return IconFromJSONTyped(json, false);
}

export function IconFromJSONTyped(json: any, ignoreDiscriminator: boolean): Icon {
    if (json == null) {
        return json;
    }
    if (typeof json !== 'object') {
        return json;
    }
    if (instanceOfIconEmoji(json)) {
        return IconEmojiFromJSONTyped(json, true);
    }
    if (instanceOfIconExternal(json)) {
        return IconExternalFromJSONTyped(json, true);
    }
    if (instanceOfIconFile(json)) {
        return IconFileFromJSONTyped(json, true);
    }

    return {} as any;
}

export function IconToJSON(json: any): any {
    return IconToJSONTyped(json, false);
}

export function IconToJSONTyped(value?: Icon | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }
    if (typeof value !== 'object') {
        return value;
    }
    if (instanceOfIconEmoji(value)) {
        return IconEmojiToJSON(value as IconEmoji);
    }
    if (instanceOfIconExternal(value)) {
        return IconExternalToJSON(value as IconExternal);
    }
    if (instanceOfIconFile(value)) {
        return IconFileToJSON(value as IconFile);
    }

    return {};
}

