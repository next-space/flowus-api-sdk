/* tslint:disable */
/* eslint-disable */
/**
 * FlowUs API
 * FlowUs Developer API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { PropertySchemaFormulaFormula } from './PropertySchemaFormulaFormula';
import {
    PropertySchemaFormulaFormulaFromJSON,
    PropertySchemaFormulaFormulaFromJSONTyped,
    PropertySchemaFormulaFormulaToJSON,
    PropertySchemaFormulaFormulaToJSONTyped,
} from './PropertySchemaFormulaFormula';

/**
 * 
 * @export
 * @interface PropertySchemaFormula
 */
export interface PropertySchemaFormula {
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaFormula
     */
    id?: string;
    /**
     * 
     * @type {string}
     * @memberof PropertySchemaFormula
     */
    name?: string;
    /**
     * 
     * @type {any}
     * @memberof PropertySchemaFormula
     */
    type?: any | null;
    /**
     * 
     * @type {PropertySchemaFormulaFormula}
     * @memberof PropertySchemaFormula
     */
    formula?: PropertySchemaFormulaFormula;
}

/**
 * Check if a given object implements the PropertySchemaFormula interface.
 */
export function instanceOfPropertySchemaFormula(value: object): value is PropertySchemaFormula {
    return true;
}

export function PropertySchemaFormulaFromJSON(json: any): PropertySchemaFormula {
    return PropertySchemaFormulaFromJSONTyped(json, false);
}

export function PropertySchemaFormulaFromJSONTyped(json: any, ignoreDiscriminator: boolean): PropertySchemaFormula {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'] == null ? undefined : json['name'],
        'type': json['type'] == null ? undefined : json['type'],
        'formula': json['formula'] == null ? undefined : PropertySchemaFormulaFormulaFromJSON(json['formula']),
    };
}

export function PropertySchemaFormulaToJSON(json: any): PropertySchemaFormula {
    return PropertySchemaFormulaToJSONTyped(json, false);
}

export function PropertySchemaFormulaToJSONTyped(value?: PropertySchemaFormula | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'type': value['type'],
        'formula': PropertySchemaFormulaFormulaToJSON(value['formula']),
    };
}

